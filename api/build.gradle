apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
		
        versionCode 210
        versionName "2.1.0"
    }
	
	buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:25.0.0'
}


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
	

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = NAME
        websiteUrl = SCM_URL
        vcsUrl = GIT_URL
        licenses = ["Apache-2.0"]
        publish = true
		
		version {
            name = VERSION_NAME
            desc = 'Initital release'
            vcsTag = VERSION_NAME
			gpg {
				sign = true
				passphrase = properties.getProperty("bintray.pass")
			}
		}
    }
}

group = GROUP_ID
version = VERSION_NAME

install {
    repositories.mavenInstaller {

        pom.groupId = GROUP_ID
        pom.artifactId = ARTIFACT_ID
        pom.version = VERSION_NAME

        pom.project {

            packaging 'aar'

            name NAME
            description DESCRIPTION
            url URL

            licenses {
                license {
                    name LICENCE_NAME
                    url LICENCE_URL
                }
            }
            developers {
                developer {
                    id DEVELOPER_ID
                    name DEVELOPER_NAME
                    email DEVELOPER_EMAIL
                }
            }
            scm {
                connection SCM_CONNECTION
                developerConnection SCM_DEV_CONNECTION
                url SCM_URL

            }

        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
